{"version":3,"file":"static/js/449.bfde1787.chunk.js","mappings":"gUAImB,IAAIA,IAAAA,MAAO,CAC1BC,QAASC,EAAQ,MACjBC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,MCJH,IAAIL,IAAAA,MAAO,CAC5BC,QAASC,EAAQ,MACjBC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,M,QC4CpB,IAwEA,EAxEkB,WAChB,OACE,UAACC,EAAA,EAAG,CACFC,UAAU,OACVC,GAAI,CACFC,gBAAiB,SAACC,GAAK,MACE,UAAvBA,EAAMC,QAAQC,KACVF,EAAMC,QAAQE,KAAK,KACnBH,EAAMC,QAAQE,KAAK,IAAI,EAC7BC,SAAU,EACVC,OAAQ,QACRC,SAAU,QACV,WAEF,SAACC,EAAA,EAAO,KACR,UAACC,EAAA,EAAS,CAACC,SAAS,KAAKX,GAAI,CAAEY,GAAI,EAAGC,GAAI,GAAI,WA0C5C,SAACC,EAAA,GAAI,CACHC,WAAS,EACTC,QAAS,EACThB,GAAI,CACFiB,gBAAgB,OAAD,OAASC,EAAI,KAC5BC,iBAAkB,YAClBZ,OAAQ,WAGZ,SAACa,EAAA,EAAM,CAACpB,GAAI,CAAEqB,GAAI,UAI1B,C,0SCpGe,SAASC,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,CAC/CC,IAAK,WACLC,KAAM,aACN,eAHKC,EAAY,KAAEC,EAAe,KAIpC,GAA4BJ,EAAAA,EAAAA,UAAS,MAAK,eAA3BK,GAAF,KAAW,MAClBC,EAAQC,aAAaC,QAAQ,SAC7BC,EAAOF,aAAaC,QAAQ,QAClC,GAA8BR,EAAAA,EAAAA,UAAS,IAAG,eAAnCU,EAAO,KAAEC,EAAU,KAC1B,GAA0BX,EAAAA,EAAAA,UAAS,IAAG,eAA/BY,EAAK,KAAEC,EAAQ,KACtB,GAA0Bb,EAAAA,EAAAA,UAAS,MAAK,eAAjCc,EAAK,KAAEC,EAAQ,KACtB,GAA0Bf,EAAAA,EAAAA,UAAS,MAAK,eAAjCgB,EAAK,KAAEC,EAAQ,KAEhBC,EAAU,yCAAG,0GACIC,EAAAA,EAAAA,GAAM,CACzBC,OAAQ,OACRC,IAAK,iDACLC,QAAS,CACP,eAAgB,2BAChB,UAAWhB,EACX,SAAUG,KAEX,KAAD,EARIc,EAAM,OASZZ,EAAWY,EAAOC,MAAM,2CACzB,kBAXe,oCAahBC,EAAAA,EAAAA,YAAU,WACRP,IACA,IAAMQ,EAAe,yCAAG,4GACDP,EAAAA,EAAAA,GAAM,CACzBC,OAAQ,OACRC,IAAK,6CACLC,QAAS,CACP,eAAgB,2BAChB,UAAWhB,EACX,SAAUG,GAEZkB,OAAQ,CAAEC,UAAWhB,EAAOiB,MAAO,KAClC,KAAD,EATIC,EAAM,OAWZ1B,EAAgB,CAAEH,IAAK6B,EAAON,KAAK,GAAGvB,IAAKC,IAAK4B,EAAON,KAAK,GAAGO,OACzDC,EAAaC,KAAKC,MAAMJ,EAAON,KAAK,GAAGW,IAC7CC,QAAQC,IAAIL,EAAY,eACxBjB,EAASiB,GAAY,2CACtB,kBAhBoB,mCAiBfM,EAAiB,yCAAG,4GACAnB,EAAAA,EAAAA,GAAM,CAC5BC,OAAQ,OACRC,IAAK,yDACLC,QAAS,CACP,eAAgB,2BAChB,UAAWhB,EACX,SAAUG,GAEZkB,OAAQ,CAAEC,UAAWhB,EAAOiB,MAAO,KAClC,KAAD,EATIU,EAAS,OAWTC,EAAaP,KAAKC,MAAMK,EAAUf,KAAK,GAAGW,IAChDC,QAAQC,IAAIG,EAAY,eACxBvB,EAASuB,GACTnC,EAAUkC,EAAUf,KAAK,IAAI,2CAC9B,kBAhBsB,mCAiBjBiB,EAAWC,aAAY,WAK3B,GAHAhB,IACAY,IAEIxB,IAAUE,EAAO,CACnB,IACM2B,EADO,IAAIV,KAAKjB,GACS4B,kBAC/BC,EAAAA,EAAAA,IAAM,GAAD,OAAIjC,EAAK,oCAA4B+B,GAC5C,CAUF,GAAG,KAGH,OADAP,QAAQC,IAAIvB,EAAOE,GACZ,WACL8B,cAAcL,EAChB,CACF,GAAG,CAAC7B,EAAOI,IAQX,OACE,+BACE,UAAC,IAAG,CACFxC,UAAU,OACVC,GAAI,CACFC,gBAAiB,SAACC,GAAK,MACE,UAAvBA,EAAMC,QAAQC,KACVF,EAAMC,QAAQE,KAAK,KACnBH,EAAMC,QAAQE,KAAK,IAAI,EAC7BC,SAAU,EACVC,OAAQ,QACRC,SAAU,QACV,UAED,KACD,SAAC,KAAc,KACf,SAAC,IAAO,KACR,SAAC,IAAS,CAACG,SAAS,KAAKX,GAAI,CAAEY,GAAI,EAAGC,GAAI,GAAI,UAC5C,SAAC,KAAI,CAACE,WAAS,EAACC,QAAS,EAAE,UACzB,SAAC,KAAI,CAACsD,MAAI,EAACC,GAAI,GAAG,UAChB,UAAC,IAAK,CACJvE,GAAI,CACFwE,EAAG,EACHC,QAAS,OACTC,cAAe,SACfnE,OAAQ,OACR,WAEF,UAAC,IAAW,CAACP,GAAI,CAAE2E,EAAG,EAAGC,MAAO,KAAOC,KAAK,QAAO,WACjD,SAAC,IAAU,CAACC,GAAG,oBAAmB,4BAClC,SAAC,IAAM,CACLC,QAAQ,oBACRD,GAAG,oBACHE,MAAO7C,EACP8C,MAAM,gBACNJ,KAAK,QACLK,SA1CG,SAACC,GACpBA,EAAEC,iBACFhD,EAAS+C,EAAEE,OAAOL,QAClBZ,EAAAA,EAAAA,IAAM,GAAD,OAAIe,EAAEE,OAAOL,MAAK,qBACzB,EAsCyC,SAEtB/C,EAAQqD,KAAI,SAACC,GACZ,IAAQpC,EAAsBoC,EAAtBpC,UAAsBoC,EAAXC,OAEnB,OACE,SAAC,IAAQ,CAACR,MAAO7B,EAAU,SACxBA,GAD8BA,EAIrC,UAGJ,UAAC,IAAY,CACXsC,MAAO,CAAElF,OAAQ,sBACjBmF,OAAQ,CAAC,YAAa,YACtBC,KAAM,GACNC,QAAS,EAAE,WAEX,SAAC,IAAS,CACRC,YAAY,yEACZjD,IAAI,wDAEN,SAAC,IAAc,CAACG,KAAkB,OAAZrB,QAAY,IAAZA,EAAAA,EAAgB,CAAC,oBASzD,C","sources":["pages/PageOne.js","pages/PageTwo.js","Dashboard.js","components/LiveTracking.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { MapContainer as Map, Marker, useMap, TileLayer } from \"react-leaflet\";\r\nconst markerIcon = new L.Icon({\r\n    iconUrl: require(\"../../src/img/marker.png\"),\r\n    iconSize: [40, 40],\r\n    iconAnchor: [17, 46], //[left/right, top/bottom]\r\n    popupAnchor: [0, -46], //[left/right, top/bottom]\r\n  });\r\nconst AnimatedMarker = () => {\r\n  const [position, setPosition] = useState([51.505, -0.09]);\r\n  const map = useMap();\r\n  useEffect(() => {\r\n    \r\n\r\n    const interval = setInterval(() => {\r\n      const newPosition = [\r\n        position[0] + Math.random() - 0.5,\r\n        position[1] + Math.random() - 0.5\r\n      ];\r\n      setPosition(newPosition);\r\n      map.locate().on(\"locationfound\", function (e) {\r\n        map.flyTo(position, map.getZoom());\r\n      });\r\n    }, 5000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [position]);\r\n\r\n  return <Marker position={position} icon={markerIcon}></Marker>;\r\n};\r\n\r\nconst PageOne = () => {\r\n  return (\r\n    <Map center={[51.505, -0.09]} zoom={13} style={{ width: \"100%\", height: \"70vh\" }}>\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution=\"Map data &copy; OpenStreetMap contributors\"\r\n      />\r\n      <AnimatedMarker />\r\n    </Map>\r\n  );\r\n};\r\n\r\nexport default PageOne;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MapContainer, Marker, Popup, useMap, TileLayer } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nconst markerIcon = new L.Icon({\r\n  iconUrl: require(\"../../src/img/marker.png\"),\r\n  iconSize: [40, 40],\r\n  iconAnchor: [17, 46], //[left/right, top/bottom]\r\n  popupAnchor: [0, -46], //[left/right, top/bottom]\r\n});\r\nfunction LiveTrackingMap() {\r\n  const [markerPosition, setMarkerPosition] = useState([36.505, -120.09]); // initial marker position\r\n  const map = useMap();\r\n\r\n  useEffect(() => {\r\n    // fetch GPS data from backend service in real-time and update marker position\r\n    const interval = setInterval(() => {\r\n      // example code to update marker position\r\n      const newMarkerPosition = [\r\n        36.51 + Math.random() * 0.1,\r\n        -120.09 + Math.random() * 0.1,\r\n      ];\r\n      setMarkerPosition(newMarkerPosition);\r\n      map.locate().on(\"locationfound\", function (e) {\r\n        map.flyTo(markerPosition, map.getZoom());\r\n      });\r\n    }, 3000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <Marker position={markerPosition} icon={markerIcon}>\r\n      <Popup>\r\n        A pretty CSS3 popup. <br /> Easily customizable.\r\n      </Popup>\r\n    </Marker>\r\n  );\r\n}\r\n\r\nconst PageTwo = () => {\r\n  return (\r\n    <MapContainer\r\n      center={[51.505, -0.09]}\r\n      zoom={14}\r\n      style={{ width: \"100%\", height: \"70vh\" }}\r\n    >\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution=\"Map data &copy; OpenStreetMap contributors\"\r\n      />\r\n      <LiveTrackingMap />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default PageTwo;\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Footer from \"./Footer\";\r\nimport img2 from \"./img/dashboard.png\";\r\nimport { useMap } from \"react-leaflet/hooks\";\r\nimport { MapContainer } from \"react-leaflet/MapContainer\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"leaflet/dist/leaflet.js\";\r\nimport osm from \"./osm-providers\";\r\nimport L from \"leaflet\";\r\nimport {\r\n  Marker,\r\n  Popup,\r\n  TileLayer,\r\n  Tooltip,\r\n  useMapEvents,\r\n  ZoomControl,\r\n} from \"react-leaflet\";\r\nimport PageOne from \"./pages/PageOne\";\r\nimport LiveTrackingMap from \"./pages/PageTwo\";\r\nimport LiveTracking from \"./components/LiveTracking\";\r\n\r\nfunction MyComponent() {\r\n  const markerIcon = new L.Icon({\r\n    iconUrl: require(\"./img/marker.png\"),\r\n    iconSize: [40, 40],\r\n    iconAnchor: [17, 46], //[left/right, top/bottom]\r\n    popupAnchor: [0, -46], //[left/right, top/bottom]\r\n  });\r\n  const [position, setPosition] = React.useState(null);\r\n  const map = useMapEvents({\r\n    click() {\r\n      map.locate();\r\n    },\r\n    locationfound(e) {\r\n      setPosition(e.latlng);\r\n      map.flyTo(e.latlng, map.getZoom());\r\n    },\r\n  });\r\n  return position === null ? null : (\r\n    <Marker position={position} icon={markerIcon}>\r\n      <Popup>You are here\r\n      <b>Device ID :  </b> <br />\r\n                <b> TimeStamp :</b>\r\n      </Popup>      \r\n    </Marker>\r\n  );\r\n}\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <Box\r\n      component=\"main\"\r\n      sx={{\r\n        backgroundColor: (theme) =>\r\n          theme.palette.mode === \"light\"\r\n            ? theme.palette.grey[100]\r\n            : theme.palette.grey[900],\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n      }}\r\n    >\r\n      <Toolbar />\r\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n       {/*  <Grid\r\n          container\r\n          spacing={3}\r\n          sx={{\r\n            height: \"80vh\",\r\n          }}\r\n        >\r\n          <MapContainer\r\n            center={[36, -98]}\r\n            zoom={13}\r\n            style={{ width: \"100%\", height: \"70vh\" }}\r\n            scrollWheelZoom={true}\r\n            fadeAnimation={true}\r\n            markerZoomAnimation={true}\r\n          >\r\n            <TileLayer\r\n              url={osm.maptiler.url}\r\n              attribution={osm.maptiler.attribution}\r\n              opacity={0.5}\r\n              zIndex={10}\r\n            />\r\n            <ZoomControl position=\"bottomright\" />\r\n            <MyComponent />\r\n            \r\n          </MapContainer>\r\n        </Grid> */}\r\n        {/* <Grid\r\n          container\r\n          spacing={3}>          \r\n          <PageOne />\r\n          </Grid> */}\r\n        {/* <Grid\r\n          container\r\n          spacing={3}>          \r\n          <LiveTracking />\r\n          </Grid>\r\n        <Grid\r\n          container\r\n          spacing={3}>          \r\n          <LiveTrackingMap />\r\n          </Grid> */}\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          sx={{\r\n            backgroundImage: `url(${img2})`,\r\n            backgroundRepeat: \"no-repeat\",\r\n            height: \"80vh\",\r\n          }}\r\n        ></Grid>\r\n        <Footer sx={{ pt: 4 }} />\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { useEffect, useState } from \"react\";\r\nimport { MapContainer, TileLayer, Polyline } from \"react-leaflet\";\r\nimport AirplaneMarker from \"./AirplaneMarker\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"leaflet/dist/leaflet.js\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Toolbar,\r\n} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { Container } from \"@mui/system\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nlet cursor = 0;\r\nexport default function LiveTracking() {\r\n  const [currentTrack, setCurrentTrack] = useState({\r\n    lat: 40.2974883,\r\n    lng: -82.2067383,\r\n  });\r\n  const [breach, setBreach] = useState(null);\r\n  const token = localStorage.getItem(\"token\");\r\n  const user = localStorage.getItem(\"user\");\r\n  const [devices, setDevices] = useState([]);\r\n  const [dname, setDname] = useState(\"\");\r\n  const [time1, setTime1] = useState(null);\r\n  const [time2, setTime2] = useState(null);\r\n\r\n  const getDevices = async () => {\r\n    const devres = await axios({\r\n      method: \"post\",\r\n      url: \"http://54.226.199.64:8001/infinite/get_devices\",\r\n      headers: {\r\n        \"Content-Type\": \"application/octet-stream\",\r\n        \"x-token\": token,\r\n        \"x-user\": user,\r\n      },\r\n    });\r\n    setDevices(devres.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDevices();\r\n    const getDeviceLatLng = async () => {\r\n      const gpsres = await axios({\r\n        method: \"post\",\r\n        url: \"http://54.226.199.64:8001/infinite/get_gps\",\r\n        headers: {\r\n          \"Content-Type\": \"application/octet-stream\",\r\n          \"x-token\": token,\r\n          \"x-user\": user,\r\n        },\r\n        params: { device_id: dname, count: 1 },\r\n      });\r\n      \r\n      setCurrentTrack({ lat: gpsres.data[0].lat, lng: gpsres.data[0].long });\r\n      const timestamp1 = Date.parse(gpsres.data[0].ts);\r\n      console.log(timestamp1, \"time stamp1\");\r\n      setTime1(timestamp1);\r\n    };\r\n    const getGeofenceBreach = async () => {\r\n      const breachres = await axios({\r\n        method: \"post\",\r\n        url: \"http://54.226.199.64:8001/infinite/get_geofence_breach\",\r\n        headers: {\r\n          \"Content-Type\": \"application/octet-stream\",\r\n          \"x-token\": token,\r\n          \"x-user\": user,\r\n        },\r\n        params: { device_id: dname, count: 1 },\r\n      });\r\n\r\n      const timestamp2 = Date.parse(breachres.data[0].ts);\r\n      console.log(timestamp2, \"time stamp2\");\r\n      setTime2(timestamp2);\r\n      setBreach(breachres.data[0]);\r\n    };\r\n    const interval = setInterval(() => {\r\n      \r\n      getDeviceLatLng();\r\n      getGeofenceBreach();\r\n\r\n      if (time1 === time2) {\r\n        const date = new Date(time2);\r\n        const reversedTimestamp = date.toLocaleString();\r\n        toast(`${dname} crossed the geofence at ${reversedTimestamp}`);\r\n      }\r\n\r\n      /* if (cursor === geopoints.length - 1) {\r\n        cursor = 0;\r\n        setCurrentTrack(geopoints[cursor]);\r\n        return;\r\n      }\r\n    \r\n      cursor += 1;\r\n      setCurrentTrack(geopoints[cursor]); */\r\n    }, 5000);\r\n   \r\n    console.log(time1, time2);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [dname, time2]);\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setDname(e.target.value);\r\n    toast(`${e.target.value} Location Changed`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        component=\"main\"\r\n        sx={{\r\n          backgroundColor: (theme) =>\r\n            theme.palette.mode === \"light\"\r\n              ? theme.palette.grey[100]\r\n              : theme.palette.grey[900],\r\n          flexGrow: 1,\r\n          height: \"100vh\",\r\n          overflow: \"auto\",\r\n        }}\r\n      >\r\n        {\" \"}\r\n        <ToastContainer />\r\n        <Toolbar />\r\n        <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Paper\r\n                sx={{\r\n                  p: 2,\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  height: \"350\",\r\n                }}\r\n              >\r\n                <FormControl sx={{ m: 1, width: 200 }} size=\"small\">\r\n                  <InputLabel id=\"demo-select-small\">Select Device</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-select-small\"\r\n                    id=\"demo-select-small\"\r\n                    value={dname}\r\n                    label=\"Select Device\"\r\n                    size=\"small\"\r\n                    onChange={handleChange}\r\n                  >\r\n                    {devices.map((device) => {\r\n                      const { device_id, status } = device;\r\n\r\n                      return (\r\n                        <MenuItem value={device_id} key={device_id}>\r\n                          {device_id}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n                <MapContainer\r\n                  style={{ height: \"calc(100vh - 52px)\" }}\r\n                  center={[40.2974883, -82.2067383]}\r\n                  zoom={17}\r\n                  minZoom={5}\r\n                >\r\n                  <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                  />\r\n                  <AirplaneMarker data={currentTrack ?? {}} />\r\n                </MapContainer>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n"],"names":["L","iconUrl","require","iconSize","iconAnchor","popupAnchor","Box","component","sx","backgroundColor","theme","palette","mode","grey","flexGrow","height","overflow","Toolbar","Container","maxWidth","mt","mb","Grid","container","spacing","backgroundImage","img2","backgroundRepeat","Footer","pt","LiveTracking","useState","lat","lng","currentTrack","setCurrentTrack","setBreach","token","localStorage","getItem","user","devices","setDevices","dname","setDname","time1","setTime1","time2","setTime2","getDevices","axios","method","url","headers","devres","data","useEffect","getDeviceLatLng","params","device_id","count","gpsres","long","timestamp1","Date","parse","ts","console","log","getGeofenceBreach","breachres","timestamp2","interval","setInterval","reversedTimestamp","toLocaleString","toast","clearInterval","item","xs","p","display","flexDirection","m","width","size","id","labelId","value","label","onChange","e","preventDefault","target","map","device","status","style","center","zoom","minZoom","attribution"],"sourceRoot":""}