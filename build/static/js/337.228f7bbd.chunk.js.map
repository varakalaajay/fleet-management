{"version":3,"file":"static/js/337.228f7bbd.chunk.js","mappings":"2PAMMA,EAAOC,IAAAA,KAAO,CAClBC,SAAU,CAAC,GAAI,IACfC,YAAa,CAAC,GAAI,IAClBC,Q,mxTAGa,SAASC,EAAe,GAAW,IAATC,EAAI,EAAJA,KAC/BC,EAAaD,EAAbC,IAAKC,EAAQF,EAARE,IACb,GAA8BC,EAAAA,EAAAA,UAAS,CAACF,EAAKC,IAAK,eAA3CE,EAAO,KAAEC,EAAU,KAM1B,OAJAC,EAAAA,EAAAA,YAAU,WACJF,EAAQ,KAAOF,GAAOE,EAAQ,KAAOH,GAAKI,EAAW,CAACJ,EAAKC,GACjE,GAAG,CAACD,EAAKC,EAAKE,KAGZ,+BACE,SAAC,IAAqB,CACpBV,KAAMA,EACNa,SAAU,CAACN,EAAKC,GAChBM,iBAAkBJ,EAClBK,SAAU,IACVC,cAAc,KAItB,C,mj0HCIe,SAASC,IACtB,OAAwCR,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA7CS,EAAY,KAAEC,EAAe,KACpC,GAA4BV,EAAAA,EAAAA,UAAS,MAAK,eAAnCW,EAAM,KAAEC,EAAS,KAClBC,EAAQC,aAAaC,QAAQ,SAC7BC,EAAOF,aAAaC,QAAQ,QAkDlC,OAjDAZ,EAAAA,EAAAA,YAAU,WACRO,EAAgBO,EAPP,IAST,IAAMC,EAAWC,aAAY,WAC3B,IAAMC,EAAe,yCAAG,0GACDC,EAAAA,EAAAA,GAAM,CACzBC,OAAQ,OACRC,IAAK,6CACLC,QAAS,CACP,eAAgB,2BAChB,UAAWX,EACX,SAAUG,GAEZS,OAAQ,CAAEC,UAAW,WAAYC,MAAO,KACvC,KAAD,EATIC,EAAM,OAUZlB,EAAgB,CAAEZ,IAAK8B,EAAO/B,KAAK,GAAGC,IAAKC,IAAK6B,EAAO/B,KAAK,GAAGgC,OAAQ,2CACxE,kBAZoB,mCAafC,EAAiB,yCAAG,0GACAT,EAAAA,EAAAA,GAAM,CAC5BC,OAAQ,OACRC,IAAK,yDACLC,QAAS,CACP,eAAgB,2BAChB,UAAWX,EACX,SAAUG,GAEZS,OAAQ,CAAEC,UAAW,IAAKC,MAAO,KAChC,KAAD,EATII,EAAS,OAUfnB,EAAUmB,EAAUlC,KAAK,IAAI,2CAE9B,kBAbsB,mCAevBuB,IACAU,IACAE,QAAQC,IAAItB,EASd,GAAG,KACH,OAAO,WACLuB,cAAchB,EAChB,CACF,GAAG,KAGD,+BACE,UAACiB,EAAA,EAAG,CACFC,UAAU,OACVC,GAAI,CACFC,gBAAiB,SAACC,GAAK,MACE,UAAvBA,EAAMC,QAAQC,KACVF,EAAMC,QAAQE,KAAK,KACnBH,EAAMC,QAAQE,KAAK,IAAI,EAC7BC,SAAU,EACVC,OAAQ,QACRC,SAAU,QACV,WAEF,SAACC,EAAA,EAAO,KACR,SAACC,EAAA,EAAS,CAACC,SAAS,KAAKX,GAAI,CAAEY,GAAI,EAAGC,GAAI,GAAI,UAC5C,SAACC,EAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE,UACzB,SAACF,EAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG,UAChB,SAACC,EAAA,EAAK,CACJnB,GAAI,CACFoB,EAAG,EACHC,QAAS,OACTC,cAAe,SACff,OAAQ,OACR,UAEF,UAACgB,EAAA,EAAY,CACXC,MAAO,CAAEjB,OAAQ,sBACjBkB,OAAQ,CAAC,WAAY,YACrBC,KAAM,GACNC,QAAS,EAAE,WAEX,SAACC,EAAA,EAAS,CACRC,YAAY,yEACZ3C,IAAI,wDAEN,SAAC3B,EAAc,CAACC,KAAkB,OAAZY,QAAY,IAAZA,EAAAA,EAAgB,CAAC,mBASzD,C","sources":["components/AirplaneMarker.js","components/LiveTracking.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { LeafletTrackingMarker } from \"react-leaflet-tracking-marker\";\r\nimport L, { Popup } from \"leaflet\";\r\n\r\nimport carIcon from \"../car.png\";\r\n\r\nconst icon = L.icon({\r\n  iconSize: [45, 45],\r\n  popupAnchor: [2, -20],\r\n  iconUrl:carIcon\r\n});\r\n\r\nexport default function AirplaneMarker({ data }) {\r\n  const { lat, lng } = data;\r\n  const [prevPos, setPrevPos] = useState([lat, lng]);\r\n\r\n  useEffect(() => {\r\n    if (prevPos[1] !== lng && prevPos[0] !== lat) setPrevPos([lat, lng]);\r\n  }, [lat, lng, prevPos]);\r\n\r\n  return (\r\n    <>\r\n      <LeafletTrackingMarker\r\n        icon={icon}\r\n        position={[lat, lng]}\r\n        previousPosition={prevPos}\r\n        duration={1000}\r\n        keepAtCenter={true}\r\n      ></LeafletTrackingMarker>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { MapContainer, TileLayer, Polyline } from \"react-leaflet\";\r\nimport AirplaneMarker from \"./AirplaneMarker\";\r\nimport geopoints from \"../../src/geo-locations.json\";\r\nimport newGeoPoints from \"../../src/newpoints.json\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"leaflet/dist/leaflet.js\";\r\nimport { Box, Grid, Paper, Toolbar } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { Container } from \"@mui/system\";\r\n\r\nconst dataStory = [\r\n  {\r\n    lat: 53.22376666666667,\r\n    lng: 50.745841666666664,\r\n  },\r\n  {\r\n    lat: 53.22376666666667,\r\n    lng: 50.745841666666664,\r\n  },\r\n  {\r\n    lat: 53.223728333333334,\r\n    lng: 50.74598666666667,\r\n  },\r\n  {\r\n    lat: 53.223705,\r\n    lng: 50.746021666666664,\r\n  },\r\n  {\r\n    lat: 53.22365166666667,\r\n    lng: 50.746075,\r\n  },\r\n];\r\n\r\nlet cursor = 0;\r\nexport default function LiveTracking() {\r\n  const [currentTrack, setCurrentTrack] = useState({});\r\n  const [breach, setBreach] = useState(null);\r\n  const token = localStorage.getItem(\"token\");\r\n  const user = localStorage.getItem(\"user\");\r\n  useEffect(() => {\r\n    setCurrentTrack(geopoints[cursor]);\r\n\r\n    const interval = setInterval(() => {\r\n      const getDeviceLatLng = async () => {\r\n        const gpsres = await axios({\r\n          method: \"post\",\r\n          url: \"http://54.226.199.64:8001/infinite/get_gps\",\r\n          headers: {\r\n            \"Content-Type\": \"application/octet-stream\",\r\n            \"x-token\": token,\r\n            \"x-user\": user,\r\n          },\r\n          params: { device_id: \"Device01\", count: 1 },\r\n        });\r\n        setCurrentTrack({ lat: gpsres.data[0].lat, lng: gpsres.data[0].long });\r\n      };\r\n      const getGeofenceBreach = async () => {\r\n        const breachres = await axios({\r\n          method: \"post\",\r\n          url: \"http://54.226.199.64:8001/infinite/get_geofence_breach\",\r\n          headers: {\r\n            \"Content-Type\": \"application/octet-stream\",\r\n            \"x-token\": token,\r\n            \"x-user\": user,\r\n          },\r\n          params: { device_id: \"1\", count: 1 },\r\n        });\r\n        setBreach(breachres.data[0]);      \r\n        \r\n      };\r\n\r\n      getDeviceLatLng();\r\n      getGeofenceBreach();\r\n      console.log(breach)\r\n      /* if (cursor === geopoints.length - 1) {\r\n        cursor = 0;\r\n        setCurrentTrack(geopoints[cursor]);\r\n        return;\r\n      }\r\n    \r\n      cursor += 1;\r\n      setCurrentTrack(geopoints[cursor]); */\r\n    }, 5000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        component=\"main\"\r\n        sx={{\r\n          backgroundColor: (theme) =>\r\n            theme.palette.mode === \"light\"\r\n              ? theme.palette.grey[100]\r\n              : theme.palette.grey[900],\r\n          flexGrow: 1,\r\n          height: \"100vh\",\r\n          overflow: \"auto\",\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Paper\r\n                sx={{\r\n                  p: 2,\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  height: \"350\",\r\n                }}\r\n              > \r\n                <MapContainer\r\n                  style={{ height: \"calc(100vh - 52px)\" }}\r\n                  center={[22.2974883, 73.2067383]}\r\n                  zoom={17}\r\n                  minZoom={5}\r\n                >\r\n                  <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                  />\r\n                  <AirplaneMarker data={currentTrack ?? {}} />\r\n                </MapContainer>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n"],"names":["icon","L","iconSize","popupAnchor","iconUrl","AirplaneMarker","data","lat","lng","useState","prevPos","setPrevPos","useEffect","position","previousPosition","duration","keepAtCenter","LiveTracking","currentTrack","setCurrentTrack","breach","setBreach","token","localStorage","getItem","user","geopoints","interval","setInterval","getDeviceLatLng","axios","method","url","headers","params","device_id","count","gpsres","long","getGeofenceBreach","breachres","console","log","clearInterval","Box","component","sx","backgroundColor","theme","palette","mode","grey","flexGrow","height","overflow","Toolbar","Container","maxWidth","mt","mb","Grid","container","spacing","item","xs","Paper","p","display","flexDirection","MapContainer","style","center","zoom","minZoom","TileLayer","attribution"],"sourceRoot":""}