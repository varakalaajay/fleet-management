{"version":3,"file":"static/js/701.a708f66c.chunk.js","mappings":"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","sources":["../node_modules/react-leaflet/lib/Marker.js","../node_modules/react-leaflet/lib/Popup.js","LocationMarker.js","SpotDevice.js","MapView.js"],"sourcesContent":["import { createElementObject, createLayerComponent, extendContext } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({ position , ...options }, ctx) {\n    const marker = new LeafletMarker(position, options);\n    return createElementObject(marker, extendContext(ctx, {\n        overlayContainer: marker\n    }));\n}, function updateMarker(marker, props, prevProps) {\n    if (props.position !== prevProps.position) {\n        marker.setLatLng(props.position);\n    }\n    if (props.icon != null && props.icon !== prevProps.icon) {\n        marker.setIcon(props.icon);\n    }\n    if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n        marker.setZIndexOffset(props.zIndexOffset);\n    }\n    if (props.opacity != null && props.opacity !== prevProps.opacity) {\n        marker.setOpacity(props.opacity);\n    }\n    if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n        if (props.draggable === true) {\n            marker.dragging.enable();\n        } else {\n            marker.dragging.disable();\n        }\n    }\n});\n","import { createElementObject, createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n    const popup = new LeafletPopup(props, context.overlayContainer);\n    return createElementObject(popup, context);\n}, function usePopupLifecycle(element, context, { position  }, setOpen) {\n    useEffect(function addPopup() {\n        const { instance  } = element;\n        function onPopupOpen(event) {\n            if (event.popup === instance) {\n                instance.update();\n                setOpen(true);\n            }\n        }\n        function onPopupClose(event) {\n            if (event.popup === instance) {\n                setOpen(false);\n            }\n        }\n        context.map.on({\n            popupopen: onPopupOpen,\n            popupclose: onPopupClose\n        });\n        if (context.overlayContainer == null) {\n            // Attach to a Map\n            if (position != null) {\n                instance.setLatLng(position);\n            }\n            instance.openOn(context.map);\n        } else {\n            // Attach to container component\n            context.overlayContainer.bindPopup(instance);\n        }\n        return function removePopup() {\n            context.map.off({\n                popupopen: onPopupOpen,\n                popupclose: onPopupClose\n            });\n            context.overlayContainer?.unbindPopup();\n            context.map.removeLayer(instance);\n        };\n    }, [\n        element,\n        context,\n        setOpen,\n        position\n    ]);\n});\n","import React, { useEffect, useState } from \"react\";\r\nimport { Marker, Popup, useMap } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nconst markerIcon = new L.Icon({\r\n  iconUrl: require(\"./img/marker.png\"),\r\n  iconSize: [40, 40],\r\n  iconAnchor: [17, 46], //[left/right, top/bottom]\r\n  popupAnchor: [0, -46], //[left/right, top/bottom]\r\n});\r\n\r\nfunction LocationMarker({ location }) {\r\n  //const [position, setPosition] = useState(null);\r\n  const [bbox, setBbox] = useState([]);\r\n\r\n  const map = useMap();\r\n  //map.locate().on(\"locationfound\", function (e) {\r\n    //setPosition(location);\r\n    //map.flyTo(location, map.getZoom(14));\r\n    /* const radius = e.accuracy;\r\n    const circle = L.circle(location, radius);\r\n    circle.addTo(map); */\r\n  //  setBbox(e.bounds.toBBoxString().split(\",\"));\r\n  //});\r\n\r\n  useEffect(() => {\r\n    map.locate().on(\"locationfound\", function (e) {\r\n      //setPosition(location);\r\n      map.flyTo(location, map.getZoom());\r\n      // const radius = e.accuracy;\r\n      // const circle = L.circle(location, radius);\r\n      // circle.addTo(map);\r\n      setBbox(e.bounds.toBBoxString().split(\",\"));\r\n    });\r\n  }, [location]);\r\n\r\n  return location === null ? null : (\r\n    <Marker position={location} icon={markerIcon}>\r\n      <Popup>\r\n        You are here. <br />\r\n        Map bbox: <br />\r\n        <b>Southwest lng</b>: {bbox[0]} <br />\r\n        <b>Southwest lat</b>: {bbox[1]} <br />\r\n        <b>Northeast lng</b>: {bbox[2]} <br />\r\n        <b>Northeast lat</b>: {bbox[3]}\r\n      </Popup>\r\n    </Marker>\r\n  );\r\n}\r\n\r\nexport default LocationMarker;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  MapContainer,\r\n  Marker,\r\n  TileLayer,\r\n  Popup,\r\n  useMapEvents,\r\n  useMap,\r\n} from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.js\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Footer from \"./Footer\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from \"@mui/material\";\r\n\r\nimport osm from \"./osm-providers\";\r\nimport ThumbDownOffAltIcon from \"@mui/icons-material/ThumbDownOffAlt\";\r\nimport ThumbUpOffAltIcon from \"@mui/icons-material/ThumbUpOffAlt\";\r\n\r\nimport cities from \"./cities.json\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport LocationMarker from \"./LocationMarker\";\r\nimport MapView from \"./MapView\";\r\nimport AirplaneMarker from \"./components/AirplaneMarker\";\r\n\r\nconst markerIcon = new L.Icon({\r\n  iconUrl: require(\"./img/marker.png\"),\r\n  iconSize: [40, 40],\r\n  iconAnchor: [17, 46], //[left/right, top/bottom]\r\n  popupAnchor: [0, -46], //[left/right, top/bottom]\r\n});\r\n\r\nfunction SpotDevice() {\r\n  const [center, setCenter] = useState({ lat: 36.23, lng: -98.38 });\r\n\r\n  const mapRef = useRef();\r\n  const token = localStorage.getItem(\"token\");\r\n  const user = localStorage.getItem(\"user\");\r\n  const [devices, setDevices] = useState([]);\r\n  const [location, setLocation] = useState({});\r\n  const [dname, setDname] = useState(\"\");\r\n  const [zoom, setZoom] = useState(\"5\");\r\n  const [status, setStatus] = useState(true);\r\n  const [breach, setBreach] = useState(null);\r\n  const getDevices = async () => {\r\n    const devres = await axios({\r\n      method: \"post\",\r\n      url: \"http://54.226.199.64:8001/infinite/get_devices\",\r\n      headers: {\r\n        \"Content-Type\": \"application/octet-stream\",\r\n        \"x-token\": token,\r\n        \"x-user\": user,\r\n      },\r\n    });\r\n    setDevices(devres.data);\r\n  };\r\n  useEffect(() => {\r\n    getDevices();\r\n  }, []);\r\n\r\n  const [position, setPosition] = useState(null);\r\n\r\n  const handleStatusChange = (e) => {\r\n    e.preventDefault();\r\n    const setDeviceStatus = async () => {\r\n      const getStatus = status === true ? \"DISABLED\" : \"ENABLED\";\r\n      const getstatusres = await axios.post(\r\n        \"http://54.226.199.64:8001/infinite/set_device\",\r\n        {\r\n          device_id: dname,\r\n          type: \"TCU\",\r\n          status: getStatus,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-token\": token,\r\n            \"x-user\": user,\r\n          },\r\n        }\r\n      );\r\n      setStatus(!status);\r\n      swal({\r\n        text: getstatusres.data,\r\n        icon: \"success\",\r\n        type: \"success\",\r\n      });\r\n    };\r\n    setDeviceStatus();\r\n  };\r\n\r\n  const handleChange = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDname(e.target.value);\r\n    setZoom(\"14\");\r\n    const getDeviceLatLng = async () => {\r\n      const gpsres = await axios({\r\n        method: \"post\",\r\n        url: \"http://54.226.199.64:8001/infinite/get_gps\",\r\n        headers: {\r\n          \"Content-Type\": \"application/octet-stream\",\r\n          \"x-token\": token,\r\n          \"x-user\": user,\r\n        },\r\n        params: { device_id: e.target.value, count: 1 },\r\n      });\r\n      setCenter({ lat: gpsres.data[0].lat, lng: gpsres.data[0].long });\r\n      setPosition([gpsres.data[0].lat, gpsres.data[0].long]);\r\n      setLocation({ lat: gpsres.data[0].lat, lng: gpsres.data[0].long });\r\n    };\r\n    getDeviceLatLng();\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      component=\"main\"\r\n      sx={{\r\n        backgroundColor: (theme) =>\r\n          theme.palette.mode === \"light\"\r\n            ? theme.palette.grey[100]\r\n            : theme.palette.grey[900],\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n      }}\r\n    >\r\n      <Toolbar />\r\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n        <Grid container spacing={3}>\r\n          {/* Chart */}\r\n\r\n          <Grid item xs={12}>\r\n            <Paper\r\n              sx={{\r\n                p: 2,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                height: \"350\",\r\n              }}\r\n            >\r\n              <Box component=\"form\" noValidate sx={{ mt: 1 }}>\r\n                <FormControl sx={{ m: 1, minWidth: 200 }} size=\"small\">\r\n                  <InputLabel id=\"demo-select-small\">Select Device</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-select-small\"\r\n                    id=\"demo-select-small\"\r\n                    value={dname}\r\n                    label=\"Select Device\"\r\n                    size=\"small\"\r\n                    onChange={handleChange}\r\n                  >\r\n                    {devices.map((device) => {\r\n                      const { device_id, status } = device;\r\n\r\n                      return (\r\n                        <MenuItem value={device_id} key={device_id}>\r\n                          {device_id}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n                {position === null ? null : (\r\n                  <>\r\n                    {status === true ? (\r\n                      <span style={{ margin: \"10px\" }}> Status: Active</span>\r\n                    ) : (\r\n                      <span style={{ margin: \"10px\" }}>Status: Deactive</span>\r\n                    )}\r\n                    {status === false ? (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        sx={{ mt: 1 }}\r\n                        onClick={handleStatusChange}\r\n                      >\r\n                        ENABLE\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"error\"\r\n                        sx={{ mt: 1 }}\r\n                        onClick={handleStatusChange}\r\n                      >\r\n                        DISABLE\r\n                      </Button>\r\n                    )}\r\n\r\n                    {/* <div>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        disabled\r\n                        size=\"small\"\r\n                        startIcon={<ThumbUpOffAltIcon />}\r\n                        sx={{ mt: 1, mb: 1, mr: 4, ml: 1 }}\r\n                      >\r\n                        Enable\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        startIcon={<ThumbDownOffAltIcon />}\r\n                        sx={{ mt: 1, mb: 1 }}\r\n                      >\r\n                        Disable\r\n                      </Button>\r\n                    </div> */}\r\n                  </>\r\n                )}\r\n              </Box>\r\n              {/*{\" \"}\r\n              <MapView\r\n                center={center}\r\n                zoom={zoom}\r\n                location={location}\r\n                position={position}\r\n              />{\" \"}\r\n              */}\r\n              <MapContainer\r\n                style={{ width: \"100%\", height: \"70vh\" }}\r\n                center={center}\r\n                zoom={zoom}\r\n                ref={mapRef}\r\n                scrollWheelZoom={true}\r\n                fadeAnimation={true}\r\n                markerZoomAnimation={true}\r\n              >\r\n                <TileLayer\r\n                  url={osm.maptiler.url}\r\n                  attribution={osm.maptiler.attribution}\r\n                />\r\n\r\n                {position === null ? (\r\n                  cities.map((city, idx) => (\r\n                    <Marker\r\n                      position={[city.lat, city.lng]}\r\n                      icon={markerIcon}\r\n                      key={idx}\r\n                    >\r\n                      <Popup>\r\n                        <b>{city.city}</b>\r\n                      </Popup>\r\n                    </Marker>\r\n                  ))\r\n                ) : (\r\n                  <AirplaneMarker data={location ?? {}} />\r\n                )}\r\n              </MapContainer>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n        <Footer sx={{ pt: 4 }} />\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SpotDevice;\r\n","import React, { useRef } from \"react\";\r\nimport osm from \"./osm-providers\";\r\nimport {\r\n  MapContainer,\r\n  Marker,\r\n  TileLayer,\r\n  Popup,\r\n} from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nimport cities from \"./cities.json\";\r\nimport LocationMarker from \"./LocationMarker\";\r\nimport AirplaneMarker from \"./components/AirplaneMarker\";\r\n\r\nconst markerIcon = new L.Icon({\r\n  iconUrl: require(\"./img/marker.png\"),\r\n  iconSize: [40, 40],\r\n  iconAnchor: [17, 46], //[left/right, top/bottom]\r\n  popupAnchor: [0, -46], //[left/right, top/bottom]\r\n});\r\n\r\nconst MapView = (props) => {\r\n    const { center, zoom, location, position } = props;\r\n    const mapRef = useRef();\r\n\r\n  return (\r\n    <>\r\n      <MapContainer\r\n        style={{ width: \"100%\", height: \"70vh\" }}\r\n        center={center}\r\n        zoom={zoom}\r\n        ref={mapRef}\r\n        scrollWheelZoom={false}\r\n        fadeAnimation={true}\r\n        markerZoomAnimation={true}\r\n      >\r\n        <TileLayer\r\n          url={osm.maptiler.url}\r\n          attribution={osm.maptiler.attribution}\r\n        />\r\n\r\n        {position === null ? (\r\n          cities.map((city, idx) => (\r\n            <Marker position={[city.lat, city.lng]} icon={markerIcon} key={idx}>\r\n              <Popup>\r\n                <b>{city.city}</b>\r\n              </Popup>\r\n            </Marker>\r\n          ))\r\n        ) : (\r\n          /* <LocationMarker location={location} /> */\r\n          <AirplaneMarker data={location ?? {}} />\r\n        )}\r\n      </MapContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapView;\r\n"],"names":["Marker","createLayerComponent","ctx","position","options","marker","LeafletMarker","createElementObject","extendContext","overlayContainer","props","prevProps","setLatLng","icon","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","dragging","draggable","enable","disable","Popup","createOverlayComponent","context","popup","LeafletPopup","element","setOpen","useEffect","instance","onPopupOpen","event","update","onPopupClose","map","on","popupopen","popupclose","openOn","bindPopup","off","unbindPopup","removeLayer","L","iconUrl","require","iconSize","iconAnchor","popupAnchor","markerIcon","useState","lat","lng","center","setCenter","mapRef","useRef","token","localStorage","getItem","user","devices","setDevices","location","setLocation","dname","setDname","zoom","setZoom","status","setStatus","getDevices","axios","method","url","headers","devres","data","setPosition","handleStatusChange","e","preventDefault","setDeviceStatus","getStatus","device_id","type","getstatusres","swal","text","handleChange","useCallback","target","value","getDeviceLatLng","params","count","gpsres","long","Box","component","sx","backgroundColor","theme","palette","mode","grey","flexGrow","height","overflow","Toolbar","Container","maxWidth","mt","mb","Grid","container","spacing","item","xs","Paper","p","display","flexDirection","noValidate","FormControl","m","minWidth","size","InputLabel","id","Select","labelId","label","onChange","device","MenuItem","style","margin","Button","variant","color","onClick","width","ref","scrollWheelZoom","fadeAnimation","markerZoomAnimation","osm","attribution","cities","city","idx","Footer","pt"],"sourceRoot":""}