{"version":3,"file":"static/js/337.226c18a1.chunk.js","mappings":"uOAMMA,EAAOC,IAAAA,KAAO,CAClBC,SAAU,CAAC,GAAI,IACfC,YAAa,CAAC,GAAI,IAClBC,Q,mxTAGa,SAASC,EAAe,GAAW,IAATC,EAAI,EAAJA,KAC/BC,EAAaD,EAAbC,IAAKC,EAAQF,EAARE,IACb,GAA8BC,EAAAA,EAAAA,UAAS,CAACF,EAAKC,IAAK,eAA3CE,EAAO,KAAEC,EAAU,KAM1B,OAJAC,EAAAA,EAAAA,YAAU,WACJF,EAAQ,KAAOF,GAAOE,EAAQ,KAAOH,GAAKI,EAAW,CAACJ,EAAKC,GACjE,GAAG,CAACD,EAAKC,EAAKE,KAGZ,+BACE,SAAC,IAAqB,CACpBV,KAAMA,EACNa,SAAU,CAACN,EAAKC,GAChBM,iBAAkBJ,EAClBK,SAAU,IACVC,cAAc,KAItB,C,2g0HCCIC,EAAS,EACE,SAASC,IACtB,OAAwCT,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA7CU,EAAY,KAAEC,EAAe,KAoBpC,OAlBAR,EAAAA,EAAAA,YAAU,WACRQ,EAAgBC,EAAUJ,IAE1B,IAAMK,EAAWC,aAAY,WACvBN,IAAWI,EAAAA,OAAmB,EAOlCD,EAAgBC,EADhBJ,GAAU,IAJRG,EAAgBC,EADhBJ,EAAS,GAOb,GAAG,KACH,OAAO,WACLO,cAAcF,EAChB,CACF,GAAG,KAGD,UAACG,EAAA,EAAG,CACAC,UAAU,OACVC,GAAI,CACFC,gBAAiB,SAACC,GAAK,MACE,UAAvBA,EAAMC,QAAQC,KACVF,EAAMC,QAAQE,KAAK,KACnBH,EAAMC,QAAQE,KAAK,IAAI,EAC7BC,SAAU,EACVC,OAAQ,QACRC,SAAU,QACV,WAEJ,SAACC,EAAA,EAAO,KACR,UAACC,EAAA,EAAY,CACXC,MAAO,CAAEJ,OAAQ,sBACjBK,OAAQ,CAAC,WAAY,YACrBC,KAAM,GACNC,QAAS,EAAE,WAEX,SAACC,EAAA,EAAS,CACRC,YAAY,yEACZC,IAAI,wDAEN,SAACvC,EAAc,CAACC,KAAkB,OAAZa,QAAY,IAAZA,EAAAA,EAAgB,CAAC,SAI/C,C","sources":["components/AirplaneMarker.js","components/LiveTracking.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { LeafletTrackingMarker } from \"react-leaflet-tracking-marker\";\r\nimport L, { Popup } from \"leaflet\";\r\n\r\nimport carIcon from \"../car.png\";\r\n\r\nconst icon = L.icon({\r\n  iconSize: [45, 45],\r\n  popupAnchor: [2, -20],\r\n  iconUrl:carIcon\r\n});\r\n\r\nexport default function AirplaneMarker({ data }) {\r\n  const { lat, lng } = data;\r\n  const [prevPos, setPrevPos] = useState([lat, lng]);\r\n\r\n  useEffect(() => {\r\n    if (prevPos[1] !== lng && prevPos[0] !== lat) setPrevPos([lat, lng]);\r\n  }, [lat, lng, prevPos]);\r\n\r\n  return (\r\n    <>\r\n      <LeafletTrackingMarker\r\n        icon={icon}\r\n        position={[lat, lng]}\r\n        previousPosition={prevPos}\r\n        duration={1000}\r\n        keepAtCenter={true}\r\n      ></LeafletTrackingMarker>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { MapContainer, TileLayer, Polyline } from \"react-leaflet\";\r\nimport AirplaneMarker from \"./AirplaneMarker\";\r\nimport geopoints from \"../../src/geo-locations.json\";\r\nimport newGeoPoints from \"../../src/newpoints.json\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"leaflet/dist/leaflet.js\";\r\nimport { Box, Toolbar } from \"@mui/material\";\r\n\r\nconst dataStory = [\r\n  {\r\n    lat: 53.22376666666667,\r\n    lng: 50.745841666666664,\r\n  },\r\n  {\r\n    lat: 53.22376666666667,\r\n    lng: 50.745841666666664,\r\n  },\r\n  {\r\n    lat: 53.223728333333334,\r\n    lng: 50.74598666666667,\r\n  },\r\n  {\r\n    lat: 53.223705,\r\n    lng: 50.746021666666664,\r\n  },\r\n  {\r\n    lat: 53.22365166666667,\r\n    lng: 50.746075,\r\n  },\r\n];\r\n\r\nlet cursor = 0;\r\nexport default function LiveTracking() {\r\n  const [currentTrack, setCurrentTrack] = useState({});\r\n\r\n  useEffect(() => {\r\n    setCurrentTrack(geopoints[cursor]);\r\n\r\n    const interval = setInterval(() => {\r\n      if (cursor === geopoints.length - 1) {\r\n        cursor = 0;\r\n        setCurrentTrack(geopoints[cursor]);\r\n        return;\r\n      }\r\n\r\n      cursor += 1;\r\n      setCurrentTrack(geopoints[cursor]);\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n        component=\"main\"\r\n        sx={{\r\n          backgroundColor: (theme) =>\r\n            theme.palette.mode === \"light\"\r\n              ? theme.palette.grey[100]\r\n              : theme.palette.grey[900],\r\n          flexGrow: 1,\r\n          height: \"100vh\",\r\n          overflow: \"auto\",\r\n        }}\r\n      >\r\n      <Toolbar />\r\n      <MapContainer\r\n        style={{ height: \"calc(100vh - 52px)\" }}\r\n        center={[22.2974883, 73.2067383]}\r\n        zoom={17}\r\n        minZoom={5}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <AirplaneMarker data={currentTrack ?? {}} />\r\n      </MapContainer>\r\n    </Box>\r\n  );\r\n}\r\n"],"names":["icon","L","iconSize","popupAnchor","iconUrl","AirplaneMarker","data","lat","lng","useState","prevPos","setPrevPos","useEffect","position","previousPosition","duration","keepAtCenter","cursor","LiveTracking","currentTrack","setCurrentTrack","geopoints","interval","setInterval","clearInterval","Box","component","sx","backgroundColor","theme","palette","mode","grey","flexGrow","height","overflow","Toolbar","MapContainer","style","center","zoom","minZoom","TileLayer","attribution","url"],"sourceRoot":""}