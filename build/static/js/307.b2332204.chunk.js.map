{"version":3,"file":"static/js/307.b2332204.chunk.js","mappings":"ySAagBA,EAAAA,EAAAA,KAEhB,SAASC,IAGP,OAEM,UAACC,EAAA,EAAG,CACFC,UAAU,OACVC,GAAI,CACFC,gBAAiB,SAACC,GAAK,MACE,UAAvBA,EAAMC,QAAQC,KACVF,EAAMC,QAAQE,KAAK,KACnBH,EAAMC,QAAQE,KAAK,IAAI,EAC7BC,SAAU,EACVC,OAAQ,QACRC,SAAU,QACV,WAEF,SAACC,EAAA,EAAO,KACR,UAACC,EAAA,EAAS,CAACC,SAAS,KAAKX,GAAI,CAAEY,GAAI,EAAGC,GAAI,GAAI,WAC5C,SAACC,EAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGhB,GAAI,CAClCiB,gBAAgB,OAAD,OAASC,EAAI,KAC5BC,iBAAkB,YAClBZ,OAAQ,WAIN,SAACa,EAAA,EAAM,CAACpB,GAAI,CAAEqB,GAAI,UAK9B,CAEe,SAASC,IACtB,OAAO,SAACzB,EAAgB,GAC1B,C,kEC5CMa,GAAYa,EAAAA,EAAAA,GAAgB,CAChCC,uBAAuBC,EAAAA,EAAAA,IAAO,MAAO,CACnCC,KAAM,eACNC,KAAM,OACNC,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOE,KAAMF,EAAO,WAAD,QAAYG,EAAAA,EAAAA,GAAWC,OAAOH,EAAWpB,aAAeoB,EAAWI,OAASL,EAAOK,MAAOJ,EAAWK,gBAAkBN,EAAOM,eAC3J,IAEFC,cAAe,SAAAC,GAAO,OAAID,EAAAA,EAAAA,GAAc,CACtCR,MAAOS,EACPZ,KAAM,gBACN,IA6CJ,K","sources":["Dashboard.js","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport img2 from \"./img/dashboard.png\";\r\n\r\n\r\nconst mdTheme = createTheme();\r\n\r\nfunction DashboardContent() {\r\n  const position = [17.45, 78.38];\r\n\r\n  return (\r\n \r\n        <Box\r\n          component=\"main\"\r\n          sx={{\r\n            backgroundColor: (theme) =>\r\n              theme.palette.mode === \"light\"\r\n                ? theme.palette.grey[100]\r\n                : theme.palette.grey[900],\r\n            flexGrow: 1,\r\n            height: \"100vh\",\r\n            overflow: \"auto\",\r\n          }}\r\n        >\r\n          <Toolbar />\r\n          <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n            <Grid container spacing={3} sx={{\r\n          backgroundImage: `url(${img2})`,\r\n          backgroundRepeat: \"no-repeat\",\r\n          height: \"80vh\",\r\n        }}>\r\n             \r\n            </Grid>\r\n            <Footer sx={{ pt: 4 }} />\r\n          </Container>\r\n        </Box>\r\n      \r\n  );\r\n}\r\n\r\nexport default function Dashboard() {\r\n  return <DashboardContent />;\r\n}\r\n","/* eslint-disable material-ui/mui-name-matches-component-name */\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["createTheme","DashboardContent","Box","component","sx","backgroundColor","theme","palette","mode","grey","flexGrow","height","overflow","Toolbar","Container","maxWidth","mt","mb","Grid","container","spacing","backgroundImage","img2","backgroundRepeat","Footer","pt","Dashboard","createContainer","createStyledComponent","styled","name","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","fixed","disableGutters","useThemeProps","inProps"],"sourceRoot":""}