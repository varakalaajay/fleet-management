{"version":3,"file":"static/js/372.cefc0d42.chunk.js","mappings":"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","sources":["AddDevice.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nimport { Button, TextField, Typography } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nfunction AddDevice() {\r\n  const [deviceID, setDeviceID] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const token = localStorage.getItem(\"token\");\r\n  const user = localStorage.getItem(\"user\");\r\n  const [devices, setDevices] = useState([]);\r\n  const columns = [\r\n    { field: \"device_id\", headerName: \"Device ID\", width: 150 },\r\n    { field: \"type\", headerName: \"Type\", width: 130 },\r\n    { field: \"status\", headerName: \"Status\", width: 130 },\r\n    { field: \"createdAt\", headerName: \"Created At\", width: 160 },\r\n  ];\r\n\r\n  const listDevices = async () => {\r\n    try {\r\n      const resp = await axios({\r\n        method: \"post\",\r\n        url: \"http://54.226.199.64:8001/infinite/get_devices\",\r\n        headers: {\r\n          \"Content-Type\": \"application/octet-stream\",\r\n          \"x-token\": token,\r\n          \"x-user\": user,\r\n        },\r\n        params: { device_id: \"Device03\" },\r\n      });\r\n\r\n      setDevices(resp.data);\r\n    } catch (err) {\r\n      if (err) {\r\n        swal({\r\n          text: err,\r\n          icon: \"error\",\r\n          type: \"error\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n  useEffect(()=>{\r\n    listDevices();\r\n\r\n  },[])\r\n\r\n  const handleAdd = (event) => {\r\n    event.preventDefault();\r\n    const addDevice = async () => {\r\n      try {\r\n        const response = await axios.post(\r\n          \"http://54.226.199.64:8001/infinite/create_device\",\r\n          {\r\n            device_id: deviceID,\r\n            type: type,\r\n            status: \"ENABLED\",\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"x-token\": token,\r\n              \"x-user\": user,\r\n            },\r\n          }\r\n        );\r\n        swal({\r\n          text: \"Vehicle Registered Success\",\r\n          icon: \"success\",\r\n          type: \"success\",\r\n        });\r\n        setDeviceID(\"\");\r\n        setType(\"\");\r\n        listDevices();\r\n        navigate(\"/add-device\");\r\n      } catch (err) {\r\n        if (\r\n          err.response &&\r\n          err.response.data &&\r\n          err.response.data.errorMessage\r\n        ) {\r\n          swal({\r\n            text: err.response.data.errorMessage,\r\n            icon: \"error\",\r\n            type: \"error\",\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    addDevice();\r\n  };\r\n  return (\r\n    <Box\r\n      component=\"main\"\r\n      sx={{\r\n        backgroundColor: (theme) =>\r\n          theme.palette.mode === \"light\"\r\n            ? theme.palette.grey[100]\r\n            : theme.palette.grey[900],\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n      }}\r\n    >\r\n      <Toolbar />\r\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={5}>\r\n            <Paper\r\n              sx={{\r\n                p: 2,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                height: \"350\",\r\n              }}\r\n            >\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Add Vehicle\r\n              </Typography>\r\n              <Box\r\n                component=\"form\"\r\n                noValidate\r\n                onSubmit={handleAdd}\r\n                sx={{ mt: 1 }}\r\n              >\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"Vehicle ID\"\r\n                  type=\"text\"\r\n                  id=\"device_id\"\r\n                  name=\"deviceid\"\r\n                  value={deviceID}\r\n                  onChange={(e) => setDeviceID(e.target.value)}\r\n                  autoComplete=\"off\"\r\n                  autoFocus\r\n                />\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"type\"\r\n                  value={type}\r\n                  onChange={(e) => setType(e.target.value)}\r\n                  label=\"Type\"\r\n                  type=\"text\"\r\n                  id=\"type\"\r\n                  autoComplete=\"off\"\r\n                />\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                  Register Vehicle\r\n                </Button>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={7}>\r\n            <Paper\r\n              sx={{\r\n                p: 2,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                height: \"350\",\r\n              }}\r\n            >\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                List of Vehicles\r\n              </Typography>\r\n              <div style={{ height: 400, width: \"100%\" }}>\r\n                <DataGrid\r\n                  rows={devices}\r\n                  columns={columns}\r\n                  pageSize={5}\r\n                  rowsPerPageOptions={[5]}\r\n                />\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default AddDevice;\r\n"],"names":["useState","deviceID","setDeviceID","type","setType","navigate","useNavigate","token","localStorage","getItem","user","devices","setDevices","listDevices","axios","method","url","headers","params","device_id","resp","data","swal","text","icon","useEffect","component","sx","backgroundColor","theme","palette","mode","grey","flexGrow","height","overflow","maxWidth","mt","mb","container","spacing","item","xs","p","display","flexDirection","variant","noValidate","onSubmit","event","preventDefault","addDevice","status","response","errorMessage","margin","required","fullWidth","label","id","name","value","onChange","e","target","autoComplete","autoFocus","style","width","rows","columns","field","headerName","pageSize","rowsPerPageOptions"],"sourceRoot":""}